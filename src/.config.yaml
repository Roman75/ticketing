server:
  sleep: 1000 # wait for startup in ms
  db: 'mysql' # mysql or mssql

log:
  err: true
  info: true
  debug: true
  msg: true
  datePattern: 'yyyy-mm-dd HH:MM:ss'
  colors:
    msg: 'green'
    info: 'blue'
    debug: 'cyan'
    err: 'gray'

http:
  port: 80
#  ssl:
#    key: '/etc/ssl/certs/localhost.key'
#    cert: '/etc/ssl/certs/localhost.cert'

socket:
  logoutTokenTimeout: 10000 # logout token expires in ms
  mail:
    smtp:
      from: 'ticketing@webcomplete.at'
      options:
        port: 587                     # is the port to connect to (defaults to 25 or 465)
        host: mail.your-server.de     # is the hostname or IP address to connect to (defaults to ‘localhost’)
#        secure:                      # defines if the connection should use SSL (if true) or not (if false)
#        ignoreTLS:                   # turns off STARTTLS support if true
        requireTLS: true              # forces the client to use STARTTLS. Returns an error if upgrading the connection is not possible or fails.
#        opportunisticTLS:            # tries to use STARTTLS and continues normally if it fails
#        name:                        # optional hostname of the client, used for identifying to the server
#        localAddress:                # is the local interface to bind to for network connections
#        connectionTimeout:           # how many milliseconds to wait for the connection to establish
#        greetingTimeout:             # how many milliseconds to wait for the greeting after connection is established
#        socketTimeout:               # how many milliseconds of inactivity to allow
        logger: true                  # optional bunyan compatible logger instance. If set to true then logs to console. If value is not set or is false then nothing is logged
#        transactionLog:              # if set to true, then logs SMTP traffic without message content
        debug: true                   # if set to true, then logs SMTP traffic and message content, otherwise logs only transaction events
#        authMethod:                  # defines preferred authentication method, e.g. ‘PLAIN’
#        tls:                         # defines additional options to be passed to the socket constructor, e.g. {rejectUnauthorized: true}
#        socket:                      # - initialized socket to use instead of creating a new one
#        connection:                  # - connected socket to use instead of creating and connecting a new one. If secure option is true, then socket is upgraded from plaintext to ciphertext
      login:
        credentials:
          user: ticketing@webcomplete.at      # is the username
          pass: OfcDV84Ocs2u95M5              # is the password
        oauth2:
          user:                       # is the username
          clientId:                   # is the OAuth2 Client ID
          clientSecret:               # is the OAuth2 Client Secret
          refreshToken:               # is the refresh token to generate new access token if needed
          accessToken:                # is the access token

mysql:
  debug: true
  conn:
    debug: false
    host: 'ticketing_mysql_dev'
    user: 'ticketing_user'
    password: 'h4G7f8OP'
    database: 'ticketing_db'
    connectionLimit: 5

mssql:
  debug: true
  conn:
    server: 'ticketing_mssql_dev'
    user: 'ticketing_user'
    password: 'h4G7f8OP'
    database: 'ticketing_db'
    pool:
      max: 10
      min: 0
      idleTimeoutMillis: 30000

